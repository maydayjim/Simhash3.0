在本文中，我将通过几个真实案例来进行讨论，并且阐述了几种方案。我也说过，这个比特币项目计划正在实施当中。本文主要对比特币钱包开发商和付款系统进行研究。首先，双重支付有多严重？&nbsp;&nbsp;有几种方法可以做到比特币的双重支付。一种是让矿工来帮实现，另一种就是成为一个矿工。2013年11月在GHash.io矿池就发现博彩网站BetCoin存在双重支付诈骗，网站使用的每一次交易都不需要等待确认就可以进行。GHash.io称：他们通过调查发现：那个在公司通过做双重支付来诈骗的员工已经被解雇了，但是却没有确切的证据证明解雇的那个人是诈骗犯，这件事也就成为了云里雾里。无论如何，这件事没有对市场造成很大的冲击，大部分的矿工几乎都没有听说过这件事。Eligius矿池实现了一个在正常交易上面做的臭名朝著的交易确认。这个臭名昭著的交易被矿池所有者(LukeDashjr)称为“非交易垃圾数据”（non-transactionaldataspam）。这个地址可以在这里找到。这笔交易直接被忽略掉了，就像这笔交易没有被广播出去：这意味着一个人通过制造一笔交易，然后被分成两个地址。就使得，内存池在Eligius矿池和其他人之间变得不一致，这样一个双重支付就在Eligius里进行了，如果谁发现了这一个区块，那么这个区块上原来的交易将被取消。该漏洞已经被用来从事一种准交易服务的双重支付。经过对这个臭名昭著的交易进行检查，一个诈骗者试图几次攻击之后就放弃了。Eligius矿池运营商不希望看到犯罪分子犯下这样的罪行。事实上，他们对交易方式增加了一些补丁。LukeDashjr告诉我说，他会解决这个代码的问题，但是他自己解决不了，这不像大多数矿池那样。Eligius和Luke是去中心化的，在(GBT)挖矿协议上工作，它可以让矿池变得更稳定。因此，除非Eligius的矿工决定集体工作，这样才可能会让矿池变得不稳。以上这两种是我最为熟悉的。不过在有关方面的要求之下，第二个省略了细节。可能有关双重支付没有进行过公开讨论，但是在2015年三月末没有过这样的讨论。我检查支付处理器和双重支付系统：他们告诉我这不是他们的问题。有很多的双重支付发生在比特币网络上。让我们假设双重支付变得很糟糕，并且提出一系列关于双重支付问题的解决办法。&nbsp;&nbsp;值得一提的是，Eligius采用的是双重支付的第二种情况，是基于一个协议的漏洞：Eligius用的不是相同代码的内存池，不过它的使用规则是公开度，并且很容易进行检查。这里有两个错误：这两个的代码都很简单，这就是为什么是商家能够如此迅速的作出检查的原因。矿工所在大多数内存池的差异是由于版本的差别所致。比特币核心开发者公布了新版后，总有一些矿工能够快速的进行升级，同时也有升级慢的。但是区别基本上都是不容易观察到的细节问题。正在进行更新的钱包可以检测到那些被改变了的交易，并且将其标记为待确认。鉴于，今天要做一个双重支付的报告，我认为个协议风险分析会涉及很多&nbsp;&nbsp;了解双重支付最好的方法就是自己尝试，如果你感觉他的速度不够快，你可以在交易完成之前的任何时候终止交易。这就是为什么加文•安德森（GavinAndresen）和汤姆•哈丁（TomHarding）已经自己实现了。无论是比特币核心钱包，还是下一个BitcoinJ软件的钱包，都可以对未确认的交易进行通知。当一个交易没有被确认而通过双重支付交易得到了确认，这个时候BitcoinJ软件便会通知你。比特币的核心系统没有双重支付交易的广播，因为关于打破双重支付那些无休止的争论是毫无意义的，但是我将它收录到我的BitcoinXT补丁之中，以便帮助其他人使用XT。BitcoinXT是一个新软件，我没有做过任何形式的推广。不过它的代码适用于Windows，Mac和Linux。系统之间可以共享数据目录。所以如果你要使用的话，可以很轻松的进行来回的切换，而不需要重新下载数据。&nbsp;&nbsp;大多数的钱包如今已经不做协议风险分析了。而BitcoinJ却可以做到，只不过一些代码还不太详细。例如，它检查不到Eligius。使用这个框架来建立一个交易风险分析，并通过HTTP将结果导出（使用JSON-RPC，protobufs或二者相结合）。如果对建立在Bitcoinj之上的热钱包和SPV钱包客户端进行相同代码的风险分析的话，那将会有效的多。&nbsp;&nbsp;我在2011年描述的结构协议合同中有提到过支付渠道的使用，后来与杰瑞米•斯皮尔曼（JeremySpilman）进行了合同协议的调整。最初的描述没用到支付渠道术语：当我和马修•科拉罗（MattCorallo）开始实施Bitcoinj.计划后，在开始使用的时候才会用得上。简单的说，我认为的支付渠道是：你和卖家同时在SIG上锁定了价值，然后在进行交易。这一步会涉及到在比特币的网络上进行广播。然后便开始进行交易（给卖方），但是不通过P2P网络。其中最典型的就是微额支付：每次你用这种微服务或者你给他们一笔交易，这样都比以前快很多。最后买家和卖家进行确认在P2P网上进行结算：最终这笔信息将被广播出去并且通道被关闭。根据观察这个方案早在一个中心分支系统中被应用，以实现商家付款处理器的支付渠道网络。而并不需要触发区块。这里可以很容易的看到，如果在之前你已经过有一个支付渠道被打开，那么你就不能再通过该渠道进行双重支付确认交易。我是微额支付的狂热粉丝并且用微额支付进行过文件下载。我不太喜欢使用这种方法来抵制双重支付的原因如下：另外值得一提的是，这种支付渠道受到了攻击延展性。